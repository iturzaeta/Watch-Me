<div class="mb-2 bg-dark text-white video-position-down">

  <div class="video-l">
    <video
      id="video"
      class="video-js vjs-default-skin video-position-down"
      autoplay
      loop
      controls
      width="640" height="264"
      data-setup='{ "aspectRatio":"640:267","techOrder": ["youtube"], "sources": [{ "type": "video/youtube", "src": "{{movie}}"}],"youtube": { "start": 5 } }'
    >
    </video>
  </div>
  <div class="video-black">

    <div class="fixed-top position-relative video-down">
      
      <div class="d-flex justify-content-end mr-5">
        <div><h1>{{data.title}}</h1></div>
      </div>

      <div class="d-flex bd-highlight">
        <div class="m-3">
          <img src="{{data.poster}}">
        </div>
        <div class="mt-3">
          <h6>{{data.plot}}</h6>
        </div>
        <div class="container mx-auto m3" style="width: 30%;">
          {{!-- <form method="POST" action="/like"> --}}
            <button class="fav-button"><i class="far fa-star fa-5x mt-3"></i></button>
          {{!-- </form> --}}
          <i class="fas fa-dollar-sign fa-5x mt-3"></i><h4 class="mt-2">{{data.boxoffice}}</h4>
          <i class="fas fa-hourglass-half fa-5x mt-3"></i><h4 class="mt-2">{{data.runtime}}</h4>
          <i class="far fa-star fa-5x mt-3"></i><h4 class="mt-2">{{data.rating}}</h4>
        </div>

      </div>
    </div>
  </div>

</div>

{{#each tracks as |track|}}
<audio controls src={{track}}></audio>
{{/each}}

<img src="{{playlist.[0].images.[0].url}}">

<h5><a href="{{playlist.[0].external_urls.spotify}}" target="_blank">Listen Full Album on Spotify</a></h5>

 
  <script src="https://cdn.jsdelivr.net/npm/video.js@7.6.6/dist/video.min.js"></script> 
  <script src="https://cdn.jsdelivr.net/npm/videojs-youtube@2.5.1/dist/Youtube.min.js"></script>

  <script>

    // const url = `/user/${username.id}/favourite`
    const url = ''

    const favButton = document.querySelector('[class=fav-button]')
    favButton.addEventListener('click', function() {
      // No guardar name y poster, guardar id y popular cuando haga falta
      axios.post(url, { name: 'name', poster: 'poster name' })
        .then(({ data }) => console.info('Result => ', data))
        .catch(error => console.error('Error fetching data => ', error))
    })
  
  </script>